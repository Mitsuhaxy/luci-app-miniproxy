#!/bin/ash

#add_rule
function add_ipv4_rule() {
    if [ -z "$(ip -4 route show table all | grep 'local default dev lo table 256 scope host')" ]; then
        ip route add local default dev lo table 256
    fi
    if [ -z "$(ip -4 rule | grep 'from all fwmark 0x100 lookup 256')" ]; then
        ip rule add fwmark 0x100 table 256
    fi
}
function add_ipv6_rule() {
    if [ -z "$(ip -6 route show table all | grep 'local default dev lo table 256 metric 1024 pref medium')" ]; then
        ip -6 route add local default dev lo table 256
    fi
    if [ -z "$(ip -6 rule | grep 'from all fwmark 0x100 lookup 256')" ]; then
        ip -6 rule add fwmark 0x100 table 256
    fi
}

#del_rule
function del_ipv4_rule() {
    if [ -n "$(ip -4 route list table 256 | grep 'local default dev lo scope host')" ]; then
        ip route del local default dev lo table 256
    fi
    if [ -n "$(ip -4 rule | grep 'from all fwmark 0x100 lookup 256')" ]; then
        ip rule del fwmark 0x100 table 256
    fi
}
function del_ipv6_rule() {
    if [ -n "$(ip -6 route list table 256 | grep 'local default dev lo metric 1024 pref medium')" ]; then
        ip -6 route del local default dev lo table 256
    fi
    if [ -n "$(ip -6 rule | grep 'from all fwmark 0x100 lookup 256')" ]; then
        ip -6 rule del fwmark 0x100 table 256
    fi
}

#add_set
function add_ipv4_set() {
    if [ -z "$(ipset --list | grep 'Name: lan4')" ]; then
        ipset create lan4 hash:net family inet hashsize 1024
    else
        ipset flush lan4
    fi
    ipset add lan4 0.0.0.0/8
    ipset add lan4 10.0.0.0/8
    ipset add lan4 100.64.0.0/10
    ipset add lan4 127.0.0.0/8
    ipset add lan4 169.254.0.0/16
    ipset add lan4 172.16.0.0/12
    ipset add lan4 192.168.0.0/16
    ipset add lan4 192.0.0.0/24
    ipset add lan4 192.0.2.0/24
    ipset add lan4 192.88.99.0/24
    ipset add lan4 198.18.0.0/15
    ipset add lan4 198.51.100.0/24
    ipset add lan4 203.0.113.0/24
    ipset add lan4 224.0.0.0/3
    ipset add lan4 255.255.255.255/32

    if [ -z "$(ipset --list | grep 'Name: wan4')" ]; then
        ipset create wan4 hash:net family inet hashsize 1024
    else
        ipset flush wan4
    fi
    ipset add wan4 $(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].address')/$(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].mask')
}
function add_ipv6_set() {
    if [ -z "$(ipset --list | grep 'Name: lan6')" ]; then
        ipset create lan6 hash:net family inet6 hashsize 1024
    else
        ipset flush lan6
    fi
    ipset add lan6 ::/128
    ipset add lan6 ::1/128
    ipset add lan6 ::ffff:0:0/96
    ipset add lan6 ::ffff:0:0:0/96
    ipset add lan6 64:ff9b::/96
    ipset add lan6 64:ff9b:1::/48
    ipset add lan6 100::/64
    ipset add lan6 2001:0000::/32
    ipset add lan6 2001:20::/28
    ipset add lan6 2001:db8::/32
    ipset add lan6 2002::/16
    ipset add lan6 fc00::/7
    ipset add lan6 fe80::/10
    ipset add lan6 ff00::/8

    if [ -z "$(ipset --list | grep 'Name: wan6')" ]; then
        ipset create wan6 hash:net family inet6 hashsize 1024
    else
        ipset flush wan6
    fi
    ipset add wan6 $(ifstatus wan6 | jsonfilter -e '@["ipv6-prefix"][0].address')/$(ifstatus wan6 | jsonfilter -e '@["ipv6-prefix"][0].mask')
    ipset add wan6 $(ifstatus wan6 | jsonfilter -e '@["ipv6-address"][0].address')/$(ifstatus wan6 | jsonfilter -e '@["ipv6-address"][0].mask')
}

#del_set
function del_ipv4_set() {
    if [ -n "$(ipset --list | grep 'Name: lan4')" ]; then
        ipset destroy lan4
    fi

    if [ -n "$(ipset --list | grep 'Name: wan4')" ]; then
        ipset destroy wan4
    fi
}
function del_ipv6_set() {
    if [ -n "$(ipset --list | grep 'Name: lan6')" ]; then
        ipset destroy lan6
    fi

    if [ -n "$(ipset --list | grep 'Name: wan6')" ]; then
        ipset destroy wan6
    fi
}

#enable_tproxy
function enable_ipv4_tproxy() {
    if [ -z "$(iptables --list -t mangle | grep 'TPROXY')" ]; then
        iptables -t mangle -A PREROUTING -m set --match-set lan4 dst -j RETURN
        iptables -t mangle -A PREROUTING -m set --match-set wan4 dst -j RETURN
        iptables -t mangle -A PREROUTING -p tcp -j TPROXY --on-ip 127.0.0.1 --on-port "$port" --tproxy-mark 0x100
        iptables -t mangle -A PREROUTING -p udp -j TPROXY --on-ip 127.0.0.1 --on-port "$port" --tproxy-mark 0x100
        iptables -t mangle -A OUTPUT -m set --match-set lan4 dst -j RETURN
        iptables -t mangle -A OUTPUT -m set --match-set wan4 dst -j RETURN
        iptables -t mangle -A OUTPUT -m mark --mark "$mark" -j RETURN
        iptables -t mangle -A OUTPUT -p tcp -j MARK --set-mark 0x100
        iptables -t mangle -A OUTPUT -p udp -j MARK --set-mark 0x100
    fi
}
function enable_ipv6_tproxy() {
    if [ -z "$(ip6tables --list -t mangle | grep 'TPROXY')" ]; then
        ip6tables -t mangle -A PREROUTING -m set --match-set lan6 dst -j RETURN
        ip6tables -t mangle -A PREROUTING -m set --match-set wan6 dst -j RETURN
        ip6tables -t mangle -A PREROUTING -p tcp -j TPROXY --on-ip ::1 --on-port "$port" --tproxy-mark 0x100
        ip6tables -t mangle -A PREROUTING -p udp -j TPROXY --on-ip ::1 --on-port "$port" --tproxy-mark 0x100
        ip6tables -t mangle -A OUTPUT -m set --match-set lan6 dst -j RETURN
        ip6tables -t mangle -A OUTPUT -m set --match-set wan6 dst -j RETURN
        ip6tables -t mangle -A OUTPUT -m mark --mark "$mark" -j RETURN
        ip6tables -t mangle -A OUTPUT -p tcp -j MARK --set-mark 0x100
        ip6tables -t mangle -A OUTPUT -p udp -j MARK --set-mark 0x100
    fi
}

#disable_tproxy
function disable_ipv4_tproxy() {
    if [ -n "$(iptables --list -t mangle | grep 'TPROXY')" ]; then
        iptables -t mangle --flush PREROUTING
        iptables -t mangle --flush OUTPUT
    fi
}
function disable_ipv6_tproxy() {
    if [ -n "$(ip6tables --list -t mangle | grep 'TPROXY')" ]; then
        ip6tables -t mangle --flush PREROUTING
        ip6tables -t mangle --flush OUTPUT
    fi
}

#check_network
function check_ipv4_network() {
    while true; do
        ping -c 3 -w 10 119.29.29.29 >/dev/null
        if [[ $? -eq 0 ]]; then
            break
        else
            exit 1
        fi
    done
}

function check_ipv6_network() {
    while true; do
        ping6 -c 3 -w 10 2402:4e00:: >/dev/null
        if [[ $? -eq 0 ]]; then
            break
        else
            exit 1
        fi
    done
}

#stop_service
function stop_all_service() {
    disable_ipv4_tproxy
    disable_ipv6_tproxy
    del_ipv4_rule
    del_ipv6_rule
    del_ipv6_set
    del_ipv4_set
}

#start_service
function start_ipv4_service() {
    stop_all_service
    check_ipv4_network
    add_ipv4_rule
    add_ipv4_set
    enable_ipv4_tproxy
}
function start_ipv6_service() {
    stop_all_service
    check_ipv4_network
    check_ipv6_network
    add_ipv4_rule
    add_ipv6_rule
    add_ipv4_set
    add_ipv6_set
    enable_ipv4_tproxy
    enable_ipv6_tproxy
}
